{"version":3,"file":"extractSummaryResult.js","sourceRoot":"","sources":["../../src/extractSummaryResult.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EACL,8BAA8B,EAG9B,4BAA4B,EAC7B,MAAM,uBAAuB,CAAC;AA0C/B;;GAEG;AACH,MAAM,UAAU,wBAAwB,CACtC,MAAgC;IAEhC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC;IACvD,uCACK,8BAA8B,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAU,CAAC,KAC3D,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,QAAmC,EAAE,EAAE,CAAC,mBAC7D,QAAQ,EACX,CAAC,IACH;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,6BAA6B,CAC3C,EAAU,EACV,KAAyB;IAEzB,OAAO,4BAA4B,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACjD,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  makeTextAnalyticsSuccessResult,\n  TextAnalyticsSuccessResult,\n  TextAnalyticsErrorResult,\n  makeTextAnalyticsErrorResult\n} from \"./textAnalyticsResult\";\nimport {\n  TextAnalyticsError,\n  ExtractedDocumentSummary,\n  ExtractedSummarySentence as GeneratedSummarySentences\n} from \"./generated/models\";\n\n/**\n * The result of the extract summary operation on a single document.\n */\nexport type ExtractSummaryResult = ExtractSummarySuccessResult | ExtractSummaryErrorResult;\n\n/**\n * The result of the extract summary operation on a single document,\n * containing a collection of the summary identified in that document.\n */\nexport interface ExtractSummarySuccessResult extends TextAnalyticsSuccessResult {\n  /**\n   * A list of sentences composing a summary of the input document.\n   */\n  sentences: SummarySentence[];\n}\n\n/**\n * An extracted sentence as part of the summary of a document.\n */\nexport interface SummarySentence {\n  /** The extracted sentence text. */\n  text: string;\n  /** A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance. */\n  rankScore: number;\n  /** The sentence offset from the start of the document, based on the value of the stringIndexType parameter. */\n  offset: number;\n  /** The length of the sentence. */\n  length: number;\n}\n\n/**\n * An error result from the extract summary operation on a single document.\n */\nexport type ExtractSummaryErrorResult = TextAnalyticsErrorResult;\n\n/**\n * @internal\n */\nexport function makeExtractSummaryResult(\n  result: ExtractedDocumentSummary\n): ExtractSummarySuccessResult {\n  const { id, warnings, statistics, sentences } = result;\n  return {\n    ...makeTextAnalyticsSuccessResult(id, warnings, statistics),\n    sentences: sentences.map((sentence: GeneratedSummarySentences) => ({\n      ...sentence\n    }))\n  };\n}\n\n/**\n * @internal\n */\nexport function makeExtractSummaryErrorResult(\n  id: string,\n  error: TextAnalyticsError\n): ExtractSummaryErrorResult {\n  return makeTextAnalyticsErrorResult(id, error);\n}\n"]}